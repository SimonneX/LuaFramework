//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ViewComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ViewComponent), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddEventListener", AddEventListener);
		L.RegFunction("RemoveEventListener", RemoveEventListener);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegFunction("EventDelegate", ViewComponent_EventDelegate);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddEventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ViewComponent obj = (ViewComponent)ToLua.CheckObject<ViewComponent>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			ViewComponent.EventDelegate arg1 = (ViewComponent.EventDelegate)ToLua.CheckDelegate<ViewComponent.EventDelegate>(L, 3);
			obj.AddEventListener(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveEventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ViewComponent obj = (ViewComponent)ToLua.CheckObject<ViewComponent>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			ViewComponent.EventDelegate arg1 = (ViewComponent.EventDelegate)ToLua.CheckDelegate<ViewComponent.EventDelegate>(L, 3);
			obj.RemoveEventListener(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ViewComponent_EventDelegate(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<ViewComponent.EventDelegate>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<ViewComponent.EventDelegate>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

